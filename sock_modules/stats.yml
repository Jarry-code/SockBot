- query: |
    SELECT count(*) as days,
      u.username as user
    FROM user_visits v
    JOIN users u on u.id = v.user_id
    WHERE u.username ILIKE $1::varchar
    GROUP BY u.username
    ORDER BY count(*) DESC
    LIMIT $2::int
  config:
    trust_level: 1
    defaults:
      1: ['%username%', 10]
      4: ['%username%', 50]
  name: DaysVisited
  chart:
    filename: DaysVisited %1%% %date%
    layout:
      title: Days Visited
      xaxis:
        title: User
        tickangle: 45
      yaxis:
        title: Days Visited
    data:
    - x: user
      y: days
      type: bar
      name: days
- query: |
    WITH StartingPoints AS (
      SELECT user_id, visited_at, ROW_NUMBER() OVER(ORDER BY user_id, visited_at) AS rownum
      FROM user_visits AS A
      WHERE NOT EXISTS (
         SELECT *
         FROM user_visits AS B
         WHERE B.visited_at = A.visited_at - INTERVAL '1 day' AND
         B.user_id = A.user_id
      )
    ),
    EndingPoints AS (
      SELECT user_id, visited_at, ROW_NUMBER() OVER(ORDER BY user_id, visited_at) AS rownum
      FROM user_visits AS A
      WHERE NOT EXISTS (
         SELECT *
         FROM user_visits AS B
         WHERE B.visited_at = A.visited_at + INTERVAL '1 day' AND
         B.user_id = A.user_id
      )
    )
    SELECT u.username, S.visited_at AS start_range, E.visited_at AS end_range, (E.visited_at - S.visited_at + 1) AS Days
    FROM StartingPoints AS S
    JOIN EndingPoints AS E ON E.rownum = S.rownum
    JOIN users u ON u.id=S.user_id AND
    u.username ILIKE $1::varchar
    ORDER BY u.id ASC, S.visited_at DESC
    LIMIT $2::int
  name: Attendance
  config:
    trust_level: 1
    defaults:
      1: ['%username%', 25]
      4: ['%username%', 50]
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
            SELECT user_id, id, topic_id, post_number
            FROM posts
            WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
            user_id IN  (
                    SELECT gu.user_id
                    FROM group_users gu
                    WHERE group_id IN(
                            SELECT g.id
                            FROM groups g
                            WHERE g.name IN ('badge_granters_admin')
                    )
            )
    ),
    LastMonth AS ( /* Count eligible posts from last month */
       SELECT row_number() OVER (ORDER BY count(*) DESC, bp.user_id), u.username, bp.user_id, count(*)
       FROM badge_posts bp
       JOIN users u on u.id=bp.user_id AND
           bp.user_id NOT IN ( /* ignore bots */
                   SELECT gu.user_id
                   FROM group_users gu
                   WHERE group_id IN(
                       SELECT g.id
                       FROM groups g
                       WHERE g.name IN ('bots')
                   )
           )
       WHERE topic_id NOT IN ( /* short topics */
          SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) <10
       ) AND topic_id NOT IN ( /* Ineligible topics */
          SELECT topic_id
          FROM exclusions
       ) AND bp.created_at > CURRENT_DATE - INTERVAL '1 month'
       GROUP BY u.username, bp.user_id
       HAVING count(*) > 1
       ORDER BY count(*) DESC, bp.user_id
    ),
    TotalUsers AS (
       SELECT max(row_number) from LastMonth
    ),
    QUERY AS (
    SELECT username, row_number, cast(row_number*100.0/TotalUsers.max AS numeric(36,2)) as percent, count, CURRENT_DATE granted_at
    FROM LastMonth, TotalUsers
    WHERE cast(row_number*100.0/TotalUsers.max AS numeric(36,2)) <= 25)
    SELECT row_number as rank, username, percent, count
    FROM QUERY
  config:
    trust_level: 1
  name: MonthPosts
  chart:
    filename: MonthPosts %date%
    layout:
      title: Month Posts
      xaxis:
        title: User
        tickangle: 45
      yaxis:
        title: Posts
        type: log
    data:
    - x: username
      y: count
      text: '%percent%% poster'
      type: bar
      name: username
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
           SELECT user_id, id, topic_id, post_number
           FROM posts
           WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
           user_id IN  (
                   SELECT gu.user_id
                   FROM group_users gu
                   WHERE group_id IN(
                           SELECT g.id
                           FROM groups g
                           WHERE g.name IN ('badge_granters_admin')
                   )
           )
    )
    SELECT u.username, count(*) AS posts, log(2.0, count(*)) AS log2posts
    FROM badge_posts  bp
    JOIN users u on u.id=bp.user_id AND u.username ILIKE $1::varchar
    WHERE topic_id NOT IN ( /* Topics with less than 10 posts */
           SELECT topic_id
           FROM badge_posts
           GROUP BY topic_id
           HAVING count(topic_id) < 10
    ) AND topic_id NOT IN ( /* Excluded topics */
           SELECT topic_id
           FROM exclusions
    ) AND u.username ILIKE $1::varchar
    GROUP BY u.username
    ORDER BY count(*) DESC
    LIMIT $2::int
  config:
    trust_level: 1
    defaults:
      1: ['%username%', 10]
      4: ['%', 50]
  name: 2nPosts
  chart:
    filename: 2nPosts %1% %date%
    layout:
      title: 2^n Posts
      xaxis:
        title: User
        tickangle: 45
      yaxis:
        title: 2^n Level
    data:
    - x: username
      y: log2posts
      text: '%posts% posts'
      type: bar
      name: posts
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
        SELECT user_id, id, topic_id, post_number
        FROM posts
        WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
        user_id IN  (
                SELECT gu.user_id
                FROM group_users gu
                WHERE group_id IN(
                        SELECT g.id
                        FROM groups g
                        WHERE g.name IN ('badge_granters_admin')
                )
        )
    )
    SELECT count(*) AS posts, to_char(created_at,'YYYY-MM') AS month
    FROM badge_posts bp
    WHERE bp.topic_id NOT IN ( /* short topics */
          SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) <10
       ) AND bp.topic_id NOT IN ( /* Ineligible topics */
          SELECT topic_id
          FROM exclusions
       ) AND bp.user_id in (SELECT id FROM users WHERE username ILIKE $1::varchar)
    GROUP BY to_char(created_at,'YYYY-MM')
    ORDER BY to_char(created_at,'YYYY-MM')
  config:
    trust_level: 1
    defaults:
      1: ['%username%']
  name: PostMonths
  chart:
    filename: Posts/Month %1% %date%
    layout:
      title: Posts/Month %1%
      xaxis:
        title: Month
        tickangle: 45
      yaxis:
        title: Count
    data:
    - x: month
      y: posts
      type: bar
      name: posts
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
        SELECT user_id, id, topic_id, post_number
        FROM posts
        WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
        user_id IN  (
                SELECT gu.user_id
                FROM group_users gu
                WHERE group_id IN(
                        SELECT g.id
                        FROM groups g
                        WHERE g.name IN ('badge_granters_admin')
                )
        )
    )
    SELECT count(*) AS posts, to_char(created_at,'YYYY-MM-DD') AS day
    FROM badge_posts bp
    WHERE bp.topic_id NOT IN ( /* short topics */
          SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) <10
       ) AND bp.topic_id NOT IN ( /* Ineligible topics */
          SELECT topic_id
          FROM exclusions
       ) AND bp.user_id in (SELECT id FROM users WHERE username ILIKE $1::varchar)
    AND created_at >= (CURRENT_DATE - 30)
    AND created_at < CURRENT_DATE
    GROUP BY to_char(created_at,'YYYY-MM-DD')
    ORDER BY to_char(created_at,'YYYY-MM-DD')
  config:
    trust_level: 1
    defaults:
      1: ['%username%']
  name: PostDays
  chart:
    filename: Posts/Day %1% %date%
    layout:
      title: Posts/Day %1%
      xaxis:
        title: Day
        tickangle: 45
      yaxis:
        title: Count
    data:
    - x: day
      y: posts
      type: bar
      name: posts
- query: 
  config:
    trust_level: 1
  name: trust
- query: |
    WITH badge_counts AS (
            SELECT count(*), b.name, u.username
            FROM user_badges ub
            JOIN badges b ON ub.badge_id=b.id
            JOIN users u ON ub.user_id=u.id
            WHERE u.username ILIKE $1::varchar
            GROUP BY u.username, b.name
            ORDER BY u.username ASC, count(*) DESC
    )
    SELECT * FROM badge_counts
    UNION
    SELECT SUM(count), 'Total', username
    FROM badge_counts
    GROUP BY username
    ORDER BY username ASC, count DESC
  config:
    trust_level: 1
    defaults:
      1: ['%username%']
  name: UserBadges
  chart:
    filename: User Badges %1% %date%
    layout:
      title: User Badges %1%
      xaxis:
        title: name
        tickangle: 45
      yaxis:
        title: count
        type: log
    data:
    - x: name
      y: count
      text: '%username%: %name%'
      type: bar
      name: posts
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
        SELECT user_id, id, topic_id, post_number
        FROM posts
        WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
        user_id IN  (
                SELECT gu.user_id
                FROM group_users gu
                WHERE group_id IN(
                        SELECT g.id
                        FROM groups g
                        WHERE g.name IN ('badge_granters_admin')
                )
        )
    ),
    buckets AS ( SELECT
        CASE 
          WHEN ua.username ILIKE $1::varchar AND (
            a.target_topic_id NOT IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            AND a.target_topic_id NOT IN ( SELECT topic_id FROM exclusions )
            AND a.target_topic_id != 1000
            AND NOT c.read_restricted)
          THEN 1 ELSE 0 END AS liker_eligible, 
        CASE 
          WHEN ut.username ILIKE $1::varchar AND (
            a.target_topic_id NOT IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            AND a.target_topic_id NOT IN ( SELECT topic_id FROM exclusions )
            AND a.target_topic_id != 1000
            AND NOT c.read_restricted)
          THEN 1 ELSE 0 END AS likee_eligible, 
        CASE 
          WHEN ua.username ILIKE $1::varchar
            AND a.target_topic_id = 1000
          THEN 1 ELSE 0 END AS liker_likes, 
        CASE 
          WHEN ut.username ILIKE $1::varchar
            AND a.target_topic_id = 1000
          THEN 1 ELSE 0 END AS likee_likes, 
        CASE 
          WHEN ua.username ILIKE $1::varchar AND a.target_topic_id != 1000 AND (
            a.target_topic_id IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            OR a.target_topic_id IN ( SELECT topic_id FROM exclusions )
            OR c.read_restricted)
          THEN 1 ELSE 0 END AS liker_hidden, 
        CASE 
          WHEN ut.username ILIKE $1::varchar AND a.target_topic_id != 1000 AND (
            a.target_topic_id IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            OR a.target_topic_id IN ( SELECT topic_id FROM exclusions )
            OR c.read_restricted)
          THEN 1 ELSE 0 END AS likee_hidden,
        a.created_at
        FROM user_actions a
        INNER JOIN users ua ON a.acting_user_id = ua.id
        INNER JOIN users ut ON a.user_id = ut.id
        INNER JOIN topics t ON a.target_topic_id = t.id
        INNER JOIN categories c ON t.category_id = c.id
        WHERE a.action_type = 2
        AND a.created_at > CURRENT_DATE - INTERVAL '1 month'
        )
    SELECT to_char(created_at,'YYYY-MM-DD') AS day, 
        -1 * SUM(liker_eligible) AS liker_eligible, 
        SUM(likee_eligible) AS likee_eligible, 
        -1 * (SUM(liker_likes) + SUM(liker_eligible)) AS liker_likes, 
        (SUM(likee_likes) + SUM(likee_eligible)) AS likee_likes, 
        -1 * (SUM(liker_hidden) + SUM(liker_likes) + SUM(liker_eligible)) AS liker_hidden, 
        (SUM(likee_hidden) + SUM(likee_likes) + SUM(likee_eligible)) AS likee_hidden
    FROM buckets
    GROUP BY to_char(created_at,'YYYY-MM-DD')
    ORDER BY to_char(created_at,'YYYY-MM-DD')
  config:
    trust_level: 1
    defaults:
      1: ['%username%']
  name: Likes
  chart:
    filename: Daily Likes %1% %date%
    layout:
      title: "%1%'s Likes/Day"
      barmode: overlay
      xaxis:
        title: Day
        tickangle: 45
      yaxis:
        title: Count
    data:
    - x: day
      y: liker_hidden
      type: bar
      name: All Given
      marker: {color: 'rgb(247, 136, 136)' }
    - x: day
      y: likee_hidden
      type: bar
      name: All Received
      marker: {color: 'rgb(92, 130, 159)' }
    - x: day
      y: liker_likes
      type: bar
      name: 'Badge, T1000 Given'
      marker: {color: 'rgb(209, 92, 92)' }
    - x: day
      y: likee_likes
      type: bar
      name: 'Badge, T1000 Received'
      marker: {color: 'rgb(64, 104, 134)' }
    - x: day
      y: liker_eligible
      type: bar
      name: Badge Given
      marker: {color: 'rgb(131, 30, 30)' }
    - x: day
      y: likee_eligible
      type: bar
      name: Badge Received
      marker: {color: 'rgb(23, 58, 84)' }
- query: |
    WITH exclusions AS ( /* Which categories to exclude from counters */
        SELECT user_id, id, topic_id, post_number
        FROM posts
        WHERE raw LIKE '%c09fa970-5a9a-11e4-8ed6-0800200c9a66%' AND
        user_id IN  (
                SELECT gu.user_id
                FROM group_users gu
                WHERE group_id IN(
                        SELECT g.id
                        FROM groups g
                        WHERE g.name IN ('badge_granters_admin')
                )
        )
    ),
    buckets AS ( SELECT
        CASE 
          WHEN (
            a.target_topic_id NOT IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            AND a.target_topic_id NOT IN ( SELECT topic_id FROM exclusions )
            AND a.target_topic_id != 1000
            AND NOT c.read_restricted)
          THEN 1 ELSE 0 END AS liker_eligible, 
        CASE 
          WHEN a.target_topic_id = 1000
          THEN 1 ELSE 0 END AS liker_likes, 
        CASE 
          WHEN a.target_topic_id != 1000 AND (
            a.target_topic_id IN ( SELECT topic_id FROM badge_posts GROUP BY topic_id HAVING count(topic_id) < 10 )
            OR a.target_topic_id IN ( SELECT topic_id FROM exclusions )
            OR c.read_restricted)
          THEN 1 ELSE 0 END AS liker_hidden, 
        a.created_at
        FROM user_actions a
        INNER JOIN topics t ON a.target_topic_id = t.id
        INNER JOIN categories c ON t.category_id = c.id
        WHERE a.action_type = 2
        AND a.created_at > CURRENT_DATE - INTERVAL '1 month'
        )
    SELECT to_char(created_at,'YYYY-MM-DD') AS day, 
        SUM(liker_eligible) AS liker_eligible, 
        SUM(liker_likes) AS liker_likes, 
        SUM(liker_hidden) AS liker_hidden
    FROM buckets
    GROUP BY to_char(created_at,'YYYY-MM-DD')
    ORDER BY to_char(created_at,'YYYY-MM-DD')
  config:
    trust_level: 1
  name: AllLikes
  chart:
    filename: Daily Likes %date%
    layout:
      title: Overall Likes/Day
      barmode: stack
      xaxis:
        title: Day
        tickangle: 45
      yaxis:
        title: Count
    data:
    - x: day
      y: liker_eligible
      type: bar
      name: Badge
      marker: {color: 'rgb(131, 30, 30)' }
    - x: day
      y: liker_likes
      type: bar
      name: Likes Thread
      marker: {color: 'rgb(209, 92, 92)' }
    - x: day
      y: liker_hidden
      type: bar
      name: Others
      marker: {color: 'rgb(247, 136, 136)' }
